# This is a basic workflow to help you get started with Actions
# Some documentations: https://docs.github.com/en/actions/learn-github-actions/environment-variables
# https://alexwilson.tech/content/717e6a35-1cb5-4a28-9321-592d05ddd9dc
# https://medium.com/@danieljimgarcia/publishing-static-sites-to-github-pages-using-github-actions-8040f57dfeaf
name: Continuous Integration Website Colisson

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      - uses: cachix/install-nix-action@v14
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      # Runs a set of commands using the runners shell
      - name: Echo flake installed
        run: |
          echo ==========================
          echo === Flake is installed ===
          echo ==========================

      # Build the project (the website will be in the "result" folder)
      - run: nix build

      # Copy it in the "gh-pages" page.
      # https://github.com/marketplace/actions/deploy-to-github-pages
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: result # The folder the action should deploy.
